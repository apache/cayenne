package org.objectstyle.cayenne.testdo.relationship.auto;

import java.util.List;

/** Class _ReflexiveAndToOne was generated by Cayenne.
  * It is probably a good idea to avoid changing this class manually, 
  * since it may be overwritten next time code is regenerated. 
  * If you need to make any customizations, please use subclass. 
  */
public class _ReflexiveAndToOne extends org.objectstyle.cayenne.CayenneDataObject {

    public static final String NAME_PROPERTY = "name";
    public static final String CHILDREN_PROPERTY = "children";
    public static final String TO_HELPER_PROPERTY = "toHelper";
    public static final String TO_PARENT_PROPERTY = "toParent";

    public static final String REFLEXIVE_AND_TO_ONE_ID_PK_COLUMN = "REFLEXIVE_AND_TO_ONE_ID";

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }
    
    
    public void addToChildren(org.objectstyle.cayenne.testdo.relationship.ReflexiveAndToOne obj) {
        addToManyTarget("children", obj, true);
    }
    public void removeFromChildren(org.objectstyle.cayenne.testdo.relationship.ReflexiveAndToOne obj) {
        removeToManyTarget("children", obj, true);
    }
    public List getChildren() {
        return (List)readProperty("children");
    }
    
    
    public void setToHelper(org.objectstyle.cayenne.testdo.relationship.RelationshipHelper toHelper) {
        setToOneTarget("toHelper", toHelper, true);
    }

    public org.objectstyle.cayenne.testdo.relationship.RelationshipHelper getToHelper() {
        return (org.objectstyle.cayenne.testdo.relationship.RelationshipHelper)readProperty("toHelper");
    } 
    
    
    public void setToParent(org.objectstyle.cayenne.testdo.relationship.ReflexiveAndToOne toParent) {
        setToOneTarget("toParent", toParent, true);
    }

    public org.objectstyle.cayenne.testdo.relationship.ReflexiveAndToOne getToParent() {
        return (org.objectstyle.cayenne.testdo.relationship.ReflexiveAndToOne)readProperty("toParent");
    } 
    
    
}
