package org.apache.cayenne.modeler.pref;

/** Class _DBConnectionInfo was generated by Cayenne.
  * It is probably a good idea to avoid changing this class manually, 
  * since it may be overwritten next time code is regenerated. 
  * If you need to make any customizations, please use subclass. 
  */
public class _DBConnectionInfo extends org.apache.cayenne.pref.PreferenceDetail {

    public static final String DB_ADAPTER_PROPERTY = "dbAdapter";
    public static final String DOMAIN_PREFERENCE_ID_PROPERTY = "domainPreferenceId";
    public static final String JDBC_DRIVER_PROPERTY = "jdbcDriver";
    public static final String PASSWORD_PROPERTY = "password";
    public static final String URL_PROPERTY = "url";
    public static final String USER_NAME_PROPERTY = "userName";

    public static final String ID_PK_COLUMN = "id";

    public void setDbAdapter(String dbAdapter) {
        writeProperty("dbAdapter", dbAdapter);
    }
    public String getDbAdapter() {
        return (String)readProperty("dbAdapter");
    }
    
    
    public void setDomainPreferenceId(Integer domainPreferenceId) {
        writeProperty("domainPreferenceId", domainPreferenceId);
    }
    public Integer getDomainPreferenceId() {
        return (Integer)readProperty("domainPreferenceId");
    }
    
    
    public void setJdbcDriver(String jdbcDriver) {
        writeProperty("jdbcDriver", jdbcDriver);
    }
    public String getJdbcDriver() {
        return (String)readProperty("jdbcDriver");
    }
    
    
    public void setPassword(String password) {
        writeProperty("password", password);
    }
    public String getPassword() {
        return (String)readProperty("password");
    }
    
    
    public void setUrl(String url) {
        writeProperty("url", url);
    }
    public String getUrl() {
        return (String)readProperty("url");
    }
    
    
    public void setUserName(String userName) {
        writeProperty("userName", userName);
    }
    public String getUserName() {
        return (String)readProperty("userName");
    }
    
    
}
