<?xml version="1.0"?>
 
<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at
 
     http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->

<!-- ================================================= -->
<!--            Cayenne master build file.             -->
<!-- Serves as a facade to a set of private buildfiles.-->
<!-- ================================================= -->
<project name="cayenne" default="dist-bin">

    <!-- ============================================= -->
	<!-- Prepare the environment: load properties,     -->
	<!-- init imports, create derived properties.      -->
    <!-- ============================================= -->
    <property file="default.properties"/>
	<property name="dist" value="${basedir}/${dist.base}/${project.name}-${project.version}"/>
	<property name="build" value="${basedir}/${build.base}"/>
	<property name="license.dir" value="${cayenne.other}/licenses"/>
	<property name="notes.dir" value="${cayenne.other}/release-notes"/>
	
	<import file="ant/import/macros.xml"/>
	<import file="ant/import/paths.xml"/>
    
    <!-- ============================================= -->
    <!-- Prints help message describing build.xml use. -->
    <!-- ============================================= -->
    <target name="help">
        <echo>BUILD TARGETS:
==============     
     
       help         - prints this message
			
       dist-bin     - (DEFAULT) builds all subproject JAR files and installs scripts.
       release      - creates a full Cayenne distribution.
       release-mac  - creates a Mac Cayenne distribution.
       release-win  - creates a Windows Cayenne distribution.
       clean        - cleans temporary build and distribution directories
       clean-java   - cleans all build directories, preserving the docs and eclipse build
       doc          - builds Cayenne documentation, excluding Javadocs
       api          - builds Javdoc API documentation.
       javacc       - updates any code generated by JavaCC.
       jjtree       - updates any code generated via JJTree. 
       test         - runs JUnit tests
	   test-1_4     - runs JUnit tests
       testcoverage - runs JUnit test coverage analysis
       regression   - runs regression test application
	   mvn-install  - installs Cayenne in a local Maven2 repo (use "m2.repo" property to install in a non-default location)
	   mvn-bundle   - creates a Maven2 bundle in the format needed for Ibiblio upload

ENVIRONMENT:
============== 
			
       java.home = ${java.home}
       ant.home = ${ant.home}</echo>
    </target>

    <!-- ============================================= -->
    <!-- Creates a full release of Cayenne.            -->
    <!-- ============================================= -->
    <target name="release" description="creates a full Cayenne distribution.">
		<ant antfile="ant/cayenne-java.xml" target="dist-src" inheritrefs="true"/>
		<ant antfile="ant/modeler.xml" target="dist-src" inheritrefs="true"/>
		<ant antfile="ant/dvmodeler.xml" target="dist-src" inheritrefs="true"/>
		<ant antfile="ant/tutorials.xml" target="dist-src" inheritrefs="true"/>
    	
    		<!-- note that the docs have to be already prebuilt from Confluence and checked in -->
		<ant antfile="ant/doc.xml" target="doc-install" inheritrefs="true"/>
		
		<copy tofile="${dist}/RELEASE-NOTES.txt">
			<fileset dir="${notes.dir}" includes="RELEASE-NOTES*"/>
		</copy>
    	<copy tofile="${dist}/UPGRADE.txt">
			<fileset dir="${notes.dir}" includes="UPGRADE*"/>
		</copy>
		<copy tofile="${dist}/KEYS">
			<fileset dir="${notes.dir}" includes="KEYS"/>
		</copy>
    	<copy todir="${dist}">
    		<fileset dir="${license.dir}/top"/>
    	</copy>
		
		<tar tarfile="${dist.base}/${project.name}-${project.version}.tar.gz" compression="gzip">
			<tarfileset dir="${dist.base}">
				<include name="${project.name}-${project.version}/**"/>
				<exclude name="${project.name}-${project.version}/**/*.sh"/>
			</tarfileset>
			
			<!-- Set correct permissions -->
			<tarfileset dir="${dist.base}" mode="755">
				<include name="${project.name}-${project.version}/**/*.sh"/>
			</tarfileset>
		</tar>
		
		<sign releaseFile="${dist.base}/${project.name}-${project.version}.tar.gz"/>
    </target>
	
	<!-- ============================================= -->
    <!-- Creates a Mac OS X Cayenne release bundle     -->
    <!-- ============================================= -->
	<target name="release-mac" depends="release">
		<ant antfile="ant/mac-distro.xml" target="diskimage" inheritrefs="true"/>
	</target>
	
	<!-- ============================================= -->
    <!-- Creates a Windows Cayenne release bundle     -->
    <!-- ============================================= -->
	<target name="release-win" depends="release">
		<ant antfile="ant/win-distro.xml" target="zip" inheritrefs="true"/>
	</target>
	
	<!-- ========================================== -->
    <!-- Runs Cayenne Unit Tests using JDK 1.4      -->
    <!-- ========================================== -->
	<target name="test-1_4">
		<ant antfile="ant/cayenne-java.xml" target="compile-1_4" inheritrefs="true"/>
		<ant antfile="ant/modeler.xml" target="compile" inheritrefs="true"/>
		<ant antfile="ant/test.xml" target="test-1_4" inheritrefs="true"/>
    </target>
        
    <!-- ========================================== -->
    <!-- Runs Cayenne Unit Tests                    -->
    <!-- ========================================== -->
    <target name="test" description="runs JUnit tests">
		<ant antfile="ant/cayenne-java.xml" target="compile" inheritrefs="true"/>
		<ant antfile="ant/modeler.xml" target="compile" inheritrefs="true"/>
		<ant antfile="ant/test.xml" target="test" inheritrefs="true"/>
    </target>

    <!-- ========================================== -->
    <!-- Runs Unit Test Coverage Analysis           -->
    <!-- ========================================== -->
	<target name="testcoverage" description="create JUnit test coverage report">
		<property name="coverage.enabled" value="true"/>
		<antcall target="test"/>
	</target>

    <!-- ========================================== -->
    <!-- Builds all Cayenne Java subproject JARS.   -->
    <!-- ========================================== -->
	<target name="dist-bin">
		<ant antfile="ant/cayenne-java.xml" target="jar" inheritrefs="true"/>
		<ant antfile="ant/modeler.xml" target="dist-bin" inheritrefs="true"/>
		<ant antfile="ant/dvmodeler.xml" target="dist-bin" inheritrefs="true"/>
	</target>

    <!-- ========================================== -->
    <!-- Cleans distribution files and subprojects. -->
    <!-- ========================================== -->
    <target name="clean" depends="clean-java">
        <delete dir="${dist.base}"/>
        <delete file="velocity.log" failonerror="false"/>
    </target>
	
    <!-- ========================================== -->
    <!-- Cleans compiled Java sources.              -->
    <!-- ========================================== -->    
	<target name="clean-java">
		<delete includeemptydirs="true" dir="${build.base}"/>
	</target>
	
    <!-- ========================================== -->
    <!-- Runs Cayenne Regression Tests              -->
    <!-- ========================================== -->
    <target name="regression" description="runs regression test application">
		<ant antfile="ant/cayenne-java.xml" target="dist-bin" inheritrefs="true"/>
		<ant antfile="ant/test.xml" target="dist-bin" inheritrefs="true"/>
		<ant antfile="ant/regression.xml" target="test" inheritrefs="true"/>
    </target>
    
    <!-- ========================================== -->
    <!-- Updates any code generated by JavaCC.      -->
    <!-- ========================================== -->
    <target name="javacc" description="Updates any code generated by JavaCC">
        <ant antfile="ant/cayenne-java.xml" target="javacc" inheritrefs="true"/>
    </target>

    <!-- ========================================== -->
    <!-- Updates any code generated via JJTree.     -->
    <!-- ========================================== -->
    <target name="jjtree" description="Updates any code generated via JJTree">
        <ant antfile="ant/cayenne-java.xml" target="jjtree" inheritrefs="true"/>
    </target>

    <!-- ========================================== -->
    <!-- Builds Cayenne documentation.             -->
    <!-- ========================================== -->
    <target name="doc">
		<ant antfile="ant/cayenne-java.xml" target="jar" inheritrefs="true"/>
        <ant antfile="ant/doc.xml" target="doc" inheritrefs="true"/>
    </target>

    <!-- ========================================== -->
    <!-- Builds API documenatation.                 -->
    <!-- ========================================== -->
	<target name="api">
		<ant antfile="ant/cayenne-java.xml" target="api" inheritrefs="true"/>
	</target>
	
	<!-- ========================================== -->
    <!-- Installs Cayenne in the local M2 rep       -->
    <!-- ========================================== -->
    <target name="mvn-install" description="Installs Cayenne in the local M2 repo">
		<ant antfile="maven/build.xml" target="install-all"/>
    </target>
	
	<!-- ========================================== -->
    <!-- Bundles Cayenne for M2 ibiblio upload      -->
    <!-- ========================================== -->
    <target name="mvn-bundle" description="Bundles Cayenne for M2 ibiblio upload">
		<ant antfile="maven/build.xml" target="bundle-all"/>
    </target>

</project>
