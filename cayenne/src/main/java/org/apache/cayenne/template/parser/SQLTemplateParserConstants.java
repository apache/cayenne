/* Generated By:JJTree&JavaCC: Do not edit this line. SQLTemplateParserConstants.java */
/*****************************************************************
 *   Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 ****************************************************************/

package org.apache.cayenne.template.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SQLTemplateParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 5;
  /** RegularExpression Id. */
  int ELSE = 6;
  /** RegularExpression Id. */
  int END = 7;
  /** RegularExpression Id. */
  int SHARP = 8;
  /** RegularExpression Id. */
  int DOLLAR = 9;
  /** RegularExpression Id. */
  int TRUE = 10;
  /** RegularExpression Id. */
  int FALSE = 11;
  /** RegularExpression Id. */
  int RBRACKET = 12;
  /** RegularExpression Id. */
  int COMMA = 13;
  /** RegularExpression Id. */
  int LSBRACKET = 14;
  /** RegularExpression Id. */
  int RSBRACKET = 15;
  /** RegularExpression Id. */
  int LBRACKET = 16;
  /** RegularExpression Id. */
  int DOT = 17;
  /** RegularExpression Id. */
  int IDENTIFIER = 18;
  /** RegularExpression Id. */
  int LETTER = 19;
  /** RegularExpression Id. */
  int DIGIT = 20;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT_END = 22;
  /** RegularExpression Id. */
  int ESC = 26;
  /** RegularExpression Id. */
  int SINGLE_QUOTED_STRING = 28;
  /** RegularExpression Id. */
  int STRING_ESC = 29;
  /** RegularExpression Id. */
  int DOUBLE_QUOTED_STRING = 31;
  /** RegularExpression Id. */
  int INT_LITERAL = 32;
  /** RegularExpression Id. */
  int FLOAT_LITERAL = 33;
  /** RegularExpression Id. */
  int DEC_FLT = 34;
  /** RegularExpression Id. */
  int DEC_DIGITS = 35;
  /** RegularExpression Id. */
  int EXPONENT = 36;
  /** RegularExpression Id. */
  int FLT_SUFF = 37;
  /** RegularExpression Id. */
  int TEXT = 38;
  /** RegularExpression Id. */
  int TEXT_OTHER = 39;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int ARGS = 1;
  /** Lexical state. */
  int NOT_TEXT = 2;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 3;
  /** Lexical state. */
  int WithinSingleQuoteLiteral = 4;
  /** Lexical state. */
  int WithinDoubleQuoteLiteral = 5;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"#if\"",
    "\"#else\"",
    "\"#end\"",
    "\"#\"",
    "\"$\"",
    "<TRUE>",
    "<FALSE>",
    "\")\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\".\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"##\"",
    "<SINGLE_LINE_COMMENT_END>",
    "<token of kind 23>",
    "\"\\\'\"",
    "\"\\\"\"",
    "<ESC>",
    "<token of kind 27>",
    "\"\\\'\"",
    "<STRING_ESC>",
    "<token of kind 30>",
    "\"\\\"\"",
    "<INT_LITERAL>",
    "<FLOAT_LITERAL>",
    "<DEC_FLT>",
    "<DEC_DIGITS>",
    "<EXPONENT>",
    "<FLT_SUFF>",
    "<TEXT>",
    "<TEXT_OTHER>",
  };

}
